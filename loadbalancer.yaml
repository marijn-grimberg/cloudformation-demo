AWSTemplateFormatVersion: '2010-09-09'
Description: 'Network Load Balancer Template'
Resources:
  DemoNLBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'NLB Security Group'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5001
          ToPort: 5001
          SourceSecurityGroupId: !ImportValue DemoVpcLinkSecurityGroupId
      VpcId: !ImportValue DemoVpcId

  DemoNetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: 'demo-network-load-balancer'
      SecurityGroups:
        - !Ref DemoNLBSecurityGroup
      Subnets:
        - !ImportValue DemoPrivateSubnet1Id
        - !ImportValue DemoPrivateSubnet2Id
      Scheme: internal
      Type: network

  DemoFargateTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: '/health'
      HealthCheckPort: 5001
      HealthCheckProtocol: HTTP
      Name: 'fargate-target-group'
      Protocol: TCP
      Port: 5001
      VpcId: !ImportValue DemoVpcId
      TargetType: ip

  DemoNLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref DemoFargateTargetGroup
          Type: forward
      LoadBalancerArn: !Ref DemoNetworkLoadBalancer
      Port: 5001
      Protocol: TCP

Outputs:
  DemoNlbArn:
    Value: !Ref DemoNetworkLoadBalancer
    Export:
      Name: DemoNlbArn

  DemoNLBListenerArn:
    Value: !Ref DemoNLBListener
    Export:
      Name: DemoNLBListenerArn

  DemoNlbDns:
    Value: !GetAtt DemoNetworkLoadBalancer.DNSName
    Export:
      Name: DemoNlbDns

  FargateTargetGroupArn:
    Value: !Ref DemoFargateTargetGroup
    Export:
      Name: FargateTargetGroupArn

  DemoNLBSecurityGroupId:
    Value: !Ref DemoNLBSecurityGroup
    Export:
      Name: DemoNLBSecurityGroupId
